.TH MAN PAGE:HSH

.SH NAME :

Simple_Shell -

.SH SYNOPSIS :

./hsh
[command] [options] [FILE]

.SH DESCRIPTION :

The main function creates a basic shell that continuously reads user input, processes commands, handles built-in commands like "exit" and "env", executes external commands, and maintains an exit status while providing a simple shell prompt.

The function _getenv is used to find and retrieve the value of a specific environment variable by iterating through the list of environment variables (env) and comparing each variable name with the given name. If a match is found, it returns a pointer to the value of that environment variable; otherwise, it returns NULL.

The function _printenv iterates through the environ array and prints each environment variable to the standard output, displaying the variable name and its value in the format "name=value", followed by a newline.

The function empty_line checks each character of a given line (buff) to determine if it contains only spaces. If the line consists entirely of spaces, it returns 1; otherwise, it returns 0.

The _split function divides a given string (str) into multiple substrings using the provided separator (delim). It tokenizes the string and stores each substring in an array of strings, returning this array of substrings.

The search_path function returns the path where the input command was found.

The execute function creates a child process using fork(), and in the child process, it attempts to execute the command specified in args[0] using execve. If successful, the child process executes the command, and the parent process waits for the child to complete, retrieving its exit status. The function returns the exit status of the child process after execution.

.SH RETURN VALUE :

The return command will be WEXITSTATUS (status).

.SH EXAMPLE :

$ls

$ root tmp files

.SH NOTES :

No limitations or errors encountered.

.SH AUTHORS :

Writing by Oana Fundatureanu and Kévin Guédon.
